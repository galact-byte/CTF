1.HTTP/1.1协议中共定义了八种方法来表明Request-URL指定的资源的不同操作方式:
  OPTIONS:返回服务器针对特定资源所支持的HTTP请求方法。也可以利用向Web服
          务器发送'*'的请求来测试服务器的功能性。
  HEAD:向服务器索要与GET请求相一致的响应,只不过响应体将不会被返回。这一方
       法可以在不必传输整个响应内容的情况下,就可以获取包含在响应消息头中的
	   元信息。
  GET:向特定的资源发出请求。注意:GET方法不应当被用于产生"副作用"的操作中。
  POST:向指定资源提交数据进行处理请求(例如提交表单或者上传文件)。数据被包含
       在请求体中,POST请求可能会导致新的资源建立和/或已有资源的修改。
  PUT:向指定资源位置上传其最新内容。
  DELETE:请求服务器删除Request-URL所标识的资源。
  TRACE:回显服务器收到的请求,主要用于测试或诊断。
  CONNECT:HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。
  方法名称区分大小写,当某个请求所针对的资源不支持对应的请求方法,服务器应当
  返回状态码405;当服务器不认识或者不支持对应的请求方法的时候,应当返回状态501。

通过curl命令访问网站,向服务器发送各种不同类型的HTTP请求。
-v表示在请求过程中输出更详细得调试信息。
-X表示指定HTTP请求方法,这里使用CTFHUB。

2.html里a href是一个链接,我在.html中无法获得flag,所以通过a标签变为.php重定向
  成功获得flag。

3.Cookie欺骗、认证、伪造:需要管理员权限,通过curl命令,-b是cookie字符串或文件读
  取位置来获取管理员权限得到flag。

4.基础认证:在HTTP中,基本认证是允许HTTP用户代理在请求时,提供用户名和密码的一种
方式。在进行基本认证过程中,请求的HTTP头字段会包含Authorization字段。使用
Burpsuite捕获请求,然后进行暴力破解,收到Response。

5.响应包源代码:HTTP响应包源代码查看,鼠标右击点击检查,获得。

6.目录遍历:使用burpsuite进行捕捉,然后标记,进行遍历。

7.PHPINFO:ctrl+F打开搜索flag得到。

8.备份文件下载:
  (1)网站源码:根据网页给的提示建立字典使用burpsuite破解文件进行下载和flag查看。
  (2)bak文件:加入.bak文件即可下载。
  (3)vim缓存:在使用vim时会创建临时缓存文件,关闭vim时缓存文件则会被删除,当vim异
     常退出后,因为未处理缓存文件,导致可以通过缓存文件恢复原始文件内容。
	 第一次会产生.swp的文件、第二次为.swo、第三次为.swn。
  (4).DS_Store:DS_Store为桌面服务存储,是Mac OS保存文件夹的自定义属性的隐藏文件
     。通过.DS_Store可以知道这个目录里面所有文件的清单,使用curl进行访问在一堆乱
	 码后有一串数字,继续使用curl进行查看得到flag。

9.git泄露:
  (1)Log:使用dirsearch对网址进行搜索发现.git文件,再使用GitHack会把这个.git文件
     克隆下来,然后使用git log命令查看版本历史记录,会显示提交信息,每个commit都包
	 含提交的哈希值、作者、提交日期和提交信息。使用git show可以查看特定的提交的
	 详细信息和修改内容。git add用于将文件添加到Git的暂存区,以准备进行下一次提交,
	 git diff用于查看文件的修改内容,它可以比较工作目录中的文件与暂存区或已提交的
	 版本之间的差异。
  (2)Stash:用于临时保存未提交的修改的机制,git stash将当前工作目录和暂存区的修改
     保存到一个临时的存储区域。使用dirsearch进行搜索,然后使用GitHack进行克隆,在
	 .git/refs里找到stash,查看stash然后使用git diff进行比较。